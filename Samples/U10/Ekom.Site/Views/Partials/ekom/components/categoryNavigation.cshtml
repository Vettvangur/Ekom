@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    var productResponse = (ProductResponse?)ViewData["productResponse"];

    var rootCategoryNode = Model.AncestorOrSelf(3);
    
    if (rootCategoryNode == null)
    {
        return;
    }

    var category = _catalog.GetCategory(rootCategoryNode.Id);

    if (category == null)
    {
        return;
    }
}
<aside>
        
    @if (productResponse != null && productResponse.Filters.Any())
    {
        <button type="button" x-description="Mobile filter dialog toggle, controls the 'mobileFilterDialogOpen' state." class="inline-flex items-center lg:hidden">
            <span class="text-sm font-medium text-gray-700">Filters</span>
            <svg class="ml-1 h-5 w-5 flex-shrink-0 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"></path>
            </svg>
        </button>
    }

    <div class="hidden lg:block">
    
        @if (category.SubCategories.Any())
        {
            <h3 class="sr-only">Categories</h3>
            <ul role="list" class="space-y-4 text-sm font-medium text-gray-900">
                @foreach (var subCategory in category.SubCategories)
                {
                    <li>
                        <a href="@subCategory.Url" class="@(subCategory.IsCurrent(Model.Path) ? "text-indigo-600 hover:text-indigo-500" : "")">@subCategory.Title</a>
                        
                        @if (subCategory.SubCategories != null)
                        {
                            <ul role="list" class="space-y-3 border-b border-gray-200 pt-6 pb-6 pl-5 text-sm font-light text-gray-600">
                                @foreach (var subCategoryLevel2 in subCategory.SubCategories)
                                {
                                    <li>
                                        <a href="@subCategoryLevel2.Url" class="@(subCategoryLevel2.IsCurrent(Model.Path) ? "text-indigo-600 hover:text-indigo-500" : "")">@subCategoryLevel2.Title</a>
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
            </ul>
        }
        
        @if (productResponse != null && productResponse.Filters.Any())
        {
            var culture = Model.GetCultureFromDomains();
                
            <h2 class="sr-only">Filters</h2>
            <div class="space-y-10 divide-y divide-gray-200">
                @foreach (var filter in productResponse.Filters)
                {
                    int v = 0;

                    <div class="pt-10">
                        <fieldset>
                            <legend class="block text-sm font-medium text-gray-900">@filter.Field.Title.GetValue(culture)</legend>
                            <div class="space-y-3 pt-6">
                                @foreach (var val in filter.Values)
                                {
                                    v++;
                                    var query = Context.Request.Query["filter_" + filter.Field.Id];
                                    var value = val.GetValue(culture);
                                    <div class="flex items-center">
                                        <input @@change="$event.target.form.submit();" id="filter_@(filter.Field.Id)_@v" value="@value" name="filter_@filter.Field.Id" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500" @(query.Contains(value) ? "checked" : "")>
                                        <label for="filter_@(filter.Field.Id)_@v" class="ml-3 text-sm text-gray-600">@value</label>
                                    </div>
                                }
                            </div>
                        </fieldset>
                    </div>
                }
            </div>
        }

    </div>
</aside>
