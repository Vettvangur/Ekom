@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    Layout = "Master.cshtml";
    var currentMember = await _memberManager.GetCurrentMemberAsync();
    var memberAsContent = currentMember != null ? _memberManager.AsPublishedMember(currentMember) : null;

    var order = _order.GetOrder();

    var customerName = !string.IsNullOrEmpty(order.CustomerInformation.Customer.Name) ? order.CustomerInformation.Customer.Name : memberAsContent != null ? memberAsContent.Name : "";
    var customerEmail = !string.IsNullOrEmpty(order.CustomerInformation.Customer.Email) ? order.CustomerInformation.Customer.Email : currentMember != null ? currentMember.Email : "";
    var customerAddress = !string.IsNullOrEmpty(order.CustomerInformation.Customer.Address) ? order.CustomerInformation.Customer.Address : memberAsContent != null ? memberAsContent.Value<string>("address") : "";
    var customerApartment = !string.IsNullOrEmpty(order.CustomerInformation.Customer.Apartment) ? order.CustomerInformation.Customer.Apartment : memberAsContent != null ? memberAsContent.Value<string>("apartment") : "";
    var customerCity = !string.IsNullOrEmpty(order.CustomerInformation.Customer.City) ? order.CustomerInformation.Customer.City : memberAsContent != null ? memberAsContent.Value<string>("city") : "";
    var customerCountry = !string.IsNullOrEmpty(order.CustomerInformation.Customer.Country) ? order.CustomerInformation.Customer.Country : memberAsContent != null ? memberAsContent.Value<string>("country") : "";
    var customerRegion = !string.IsNullOrEmpty(order.CustomerInformation.Customer.Region) ? order.CustomerInformation.Customer.Region : memberAsContent != null ? memberAsContent.Value<string>("region") : "";
    var customerZipCode = !string.IsNullOrEmpty(order.CustomerInformation.Customer.ZipCode) ? order.CustomerInformation.Customer.ZipCode : memberAsContent != null ? memberAsContent.Value<string>("zipCode") : "";
    var customerPhone = !string.IsNullOrEmpty(order.CustomerInformation.Customer.Phone) ? order.CustomerInformation.Customer.Phone : memberAsContent != null ? memberAsContent.Value<string>("phone") : "";
}

@section Main {

    @{
        if (order == null || order.TotalQuantity <= 0)
        {
            <main class="mx-auto max-w-2xl px-4 pb-24 pt-16 sm:px-6 lg:max-w-7xl lg:px-8">
                <partial name="ekom/components/noCartResult" />
            </main>

            return;
        }
    }

    <main class="mx-auto max-w-7xl px-4 pb-24 pt-16 sm:px-6 lg:px-8">
        <div class="mx-auto max-w-2xl lg:max-w-none">
            <h1 class="sr-only">Checkout</h1>

            @using (Html.BeginEkomForm(FormType.UpdateCustomerInformation, htmlAttributes: new Dictionary<string, object> {
                { "class", "lg:grid lg:grid-cols-2 lg:gap-x-12 xl:gap-x-16" },
                { "x-data", "updateCustomerInformation" },
                { "x-on:submit.prevent", "post"}
            }))
            {
                <input type="hidden" name="storeAlias" value="@order.StoreInfo.Alias" />
                <div>
                    <div>
                        <h2 class="text-lg font-medium text-gray-900 flex items-center justify-between">
                            <span>Contact information</span>
                            <a href="#" class="text-sm font-semibold leading-6 text-indigo-400">Already have an account? Login</a>
                        </h2>

                        <div class="mt-4">
                            <label for="email-address" class="block text-sm font-medium text-gray-700">Email address *</label>
                            <div class="mt-1">
                                <input type="email" id="email-address" name="customerEmail" autocomplete="email" value="@customerEmail" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                            </div>
                        </div>
                    </div>

                    <div class="mt-10 border-t border-gray-200 pt-10">
                        <h2 class="text-lg font-medium text-gray-900">Shipping information</h2>

                        <div class="mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4">
                            <div class="sm:col-span-2">
                                <label for="full-name" class="block text-sm font-medium text-gray-700">Full name *</label>
                                <div class="mt-1">
                                    <input type="text" id="full-name" name="customerName" autocomplete="given-name" value="@customerName" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" required>
                                </div>
                            </div>

                            <div class="sm:col-span-2">
                                <label for="address" class="block text-sm font-medium text-gray-700">Address *</label>
                                <div class="mt-1">
                                    <input type="text" name="customerAddress" id="address" autocomplete="street-address" value="@customerAddress" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" required>
                                </div>
                            </div>

                            <div class="sm:col-span-2">
                                <label for="apartment" class="block text-sm font-medium text-gray-700">Apartment, suite, etc.</label>
                                <div class="mt-1">
                                    <input type="text" name="customerApartment" id="apartment" value="@customerApartment" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                                </div>
                            </div>

                            <div>
                                <label for="city" class="block text-sm font-medium text-gray-700">City *</label>
                                <div class="mt-1">
                                    <input type="text" name="customerCity" id="city" autocomplete="address-level2" value="@customerCity" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" required>
                                </div>
                            </div>

                            <div>
                                <label for="country" class="block text-sm font-medium text-gray-700">Country *</label>
                                <div class="mt-1">
 

                                    <select id="country" data-val="@customerCountry" name="customerCountry" autocomplete="country-name" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" required>
                                        <!option value="US" @(customerCountry == "US" ? "selected='selected'" : "")>United States</!option>
                                        <!option value="CA" @(customerCountry == "CA" ? "selected='selected'" : "")>Canada</!option>
                                        <!option value="IS" @(customerCountry == "IS" ? "selected='selected'" : "")>Iceland</!option>
                                        <!option value="MX" @(customerCountry == "MX" ? "selected='selected'" : "")>Mexico</!option>
                                    </select>
                                </div>
                            </div>

                            <div>
                                <label for="region" class="block text-sm font-medium text-gray-700">State / Province *</label>
                                <div class="mt-1">
                                    <input type="text" name="customerRegion" id="region" autocomplete="address-level1" value="@customerRegion" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" required>
                                </div>
                            </div>

                            <div>
                                <label for="zip-code" class="block text-sm font-medium text-gray-700">Postal code *</label>
                                <div class="mt-1">
                                    <input type="text" name="customerZipCode" id="zip-code" autocomplete="postal-code" value="@customerZipCode" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" required>
                                </div>
                            </div>

                            <div class="sm:col-span-2">
                                <label for="phone" class="block text-sm font-medium text-gray-700">Phone *</label>
                                <div class="mt-1">
                                    <input type="text" name="customerPhone" id="phone" autocomplete="tel" value="@customerPhone" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" required>
                                </div>
                            </div>
                        </div>
                    </div>

                    <section aria-labelledby="billing-heading" class="mt-10">
                        <h2 id="billing-heading" class="text-lg font-medium text-gray-900">Billing information</h2>

                        <div class="mt-6 flex items-center">
                            <input id="same-as-shipping" name="same-as-shipping" type="checkbox" @(order.CustomerInformation.IsBillingSameAsShipping ? "checked" : "") class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                            <div class="ml-2">
                                <label for="same-as-shipping" class="text-sm font-medium text-gray-900">Same as shipping information</label>
                            </div>
                        </div>
                    </section>
                </div>

                <!-- Order summary -->
                <div class="mt-10 lg:mt-0">
                    <h2 class="text-lg font-medium text-gray-900">Order summary</h2>

                    <div class="mt-4 rounded-lg border border-gray-200 bg-white shadow-sm">
                        <h3 class="sr-only">Items in your cart</h3>
                        <ul role="list" class="divide-y divide-gray-200">
                            <li class="flex px-4 py-6 sm:px-6">
                                <div class="flex-shrink-0">
                                    <img src="https://tailwindui.com/img/ecommerce-images/checkout-page-02-product-01.jpg" alt="Front of men's Basic Tee in black." class="w-20 rounded-md">
                                </div>

                                <div class="ml-6 flex flex-1 flex-col">
                                    <div class="flex">
                                        <div class="min-w-0 flex-1">
                                            <h4 class="text-sm">
                                                <a href="#" class="font-medium text-gray-700 hover:text-gray-800">Basic Tee</a>
                                            </h4>
                                            <p class="mt-1 text-sm text-gray-500">Black</p>
                                            <p class="mt-1 text-sm text-gray-500">Large</p>
                                        </div>
                                    </div>

                                    <div class="flex flex-1 items-end justify-between pt-2">
                                        <p class="mt-1 text-sm font-medium text-gray-900">$32.00</p>
                                    </div>
                                </div>
                            </li>

                        </ul>
                        <dl class="space-y-6 border-t border-gray-200 px-4 py-6 sm:px-6">
                            <div class="flex items-center justify-between">
                                <dt class="text-sm">Subtotal</dt>
                                <dd class="text-sm font-medium text-gray-900">$64.00</dd>
                            </div>
                            <div class="flex items-center justify-between">
                                <dt class="text-sm">Shipping</dt>
                                <dd class="text-sm font-medium text-gray-900">$5.00</dd>
                            </div>
                            <div class="flex items-center justify-between">
                                <dt class="text-sm">Taxes</dt>
                                <dd class="text-sm font-medium text-gray-900">$5.52</dd>
                            </div>
                            <div class="flex items-center justify-between border-t border-gray-200 pt-6">
                                <dt class="text-base font-medium">Total</dt>
                                <dd class="text-base font-medium text-gray-900">$75.52</dd>
                            </div>
                        </dl>

                        <div class="border-t border-gray-200 px-4 py-6 sm:px-6">
                            <button type="submit" class="w-full rounded-md border border-transparent bg-indigo-600 px-4 py-3 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-50">Continue to shipping</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </main>

    <script>
        document.addEventListener("alpine:init", () => {
            Alpine.data("updateCustomerInformation", () => ({
                data() {
                    var formData = new FormData(this.$el);
                    const params = new URLSearchParams();
                    formData.forEach((value, key) => {
                        params.append(key, value);
                    });
                    return params.toString();
                },
                async post() {

                    let message = '';

                    return await (
                        await fetch(this.$el.getAttribute('action'), {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/x-www-form-urlencoded",
                            },
                            body: this.data(),
                        }).then((response) => {

                            if (response.ok) {
                              // Redirect to shipping node
                            } else {
                                throw new Error();
                            }

                        }).catch((ex) => {
                            message = `<div class="rounded-md mt-5 bg-red-50 p-4 message">
                                                            <div class="flex">
                                                            <div class="flex-shrink-0">
                                                                <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd" />
                                                                </svg>
                                                            </div>
                                                            <div class="ml-3">
                                                            <h3 class="text-sm font-medium text-red-800">Invalid discount code</h3>
                                                                <div class="mt-2 text-sm text-red-700">
                                                                    <p>We're sorry, but the discount code you entered doesn't seem to exist or may have expired. Please double-check the code and try again. If you don't have a code, don't worry; we often offer great deals and discounts that you can take advantage of while shopping with us.</p>
                                                                </div>
                                                            </div>
                                                            </div>
                                                        </div>`;
                        }).finally(() => {

                            var successHtmlElement = this.$el.querySelector('.message');

                            if (successHtmlElement) {
                                successHtmlElement.outerHTML = message;
                            } else {
                                this.$el.insertAdjacentHTML('beforeend', message);
                            }

                        })
                    )
                },
            }));
        });
    </script>
}
