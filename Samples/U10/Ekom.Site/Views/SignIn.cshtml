@using Ekom.Site.Controllers
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    Layout = "Master.cshtml";

    var root = Model.GetRootNode();

    var registerNode = root.FirstChildOfType("register");

    var isAuthorized = await _memberManager.IsMemberAuthorizedAsync();
}

@section Main {
    <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
        <div class="sm:mx-auto sm:w-full sm:max-w-sm">
            <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">User authenticated</h2>
        </div>

        <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">


            @if (isAuthorized)
            {
                <div class="bg-gray-50 sm:rounded-lg">
                    <div class="px-4 py-5 sm:p-6">
                        <h3 class="text-base font-semibold leading-6 text-gray-900">You are signed in</h3>
                        <div class="mt-2 max-w-xl text-sm text-gray-500">
                            <p>Logged in and ready to rock, eh ? Let's make some magic!</p>
                        </div>
                        <div class="mt-5">
                            <a href="/umbraco/surface/auth/logout" class="inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50">Log out</a>
                        </div>
                    </div>
                </div>
            }
            else
            {
                @using (Html.BeginUmbracoForm<AuthController>("Login", null, new { @class = "space-y-6" }))
                {

                    <div>
                        <label for="email" class="block text-sm font-medium leading-6 text-gray-900">Email address</label>
                        <div class="mt-2">
                            <input id="email" name="username" type="email" autocomplete="email" required class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                        </div>
                    </div>

                    <div>
                        <div class="flex items-center justify-between">
                            <label for="password" class="block text-sm font-medium leading-6 text-gray-900">Password</label>
                        </div>
                        <div class="mt-2">
                            <input id="password" name="password" type="password" autocomplete="current-password" required class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                        </div>
                    </div>

                    <div>
                        <button type="submit" class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Sign in</button>
                    </div>

                    @if (registerNode != null)
                    {
                        <p class="mt-10 text-center text-sm text-gray-500">
                            Not a member?
                            <a href="@registerNode.Url()" class="font-semibold leading-6 text-indigo-600 hover:text-indigo-500">Create account</a>
                        </p>
                    }
                }
            }

        </div>
    </div>
}
