@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    Layout = "Master.cshtml";

    var category = _catalog.GetCategory();

    var searchQuery = Context.Request.Query["q"];
    var propertyQuery = Context.Request.Query["property_customPropertyFilter"];
    var propertyQuery2 = Context.Request.Query["property_customPropertyFilter2"];
    var productResponse = category.ProductsRecursive(
        new ProductQuery(Context.Request.Query) { 
            Page = 1, 
            PageSize = 10,
            SearchQuery = searchQuery,
            OrderBy = OrderBy.TitleAsc
        });

    var culture = "en-US";
}

<h1>@category.Title</h1>

<p>Urls</p>
<ul>
    @foreach (var url in category.Urls)
    {
        <li>@url</li>
    }
</ul>

<h2>Products</h2>

<ul>
    @foreach (var prod in productResponse.Products)
    {
        <li><a href="@prod.Url">@prod.Title</a></li>
    }
</ul>

<h2>Filters</h2>

<form method="get" action="@Model.Url()">

    <label>Search:</label>
    <input type="search" value="@searchQuery" name="q" />
    <ol>
        @foreach (var filter in productResponse.Filters)
        {

            <li>
                @filter.Field.Title.GetValue(culture)

                <ul>
                    @foreach (var val in filter.Values)
                    {
                        var query = Context.Request.Query["filter_" + filter.Field.Id];

                        var value = val.GetValue(culture);

                        <li>
                            <label>
                                <input type="checkbox" value="@value" name="filter_@filter.Field.Id" @(query.Contains(value) ? "checked" : "") /> @value
                            </label>

                        </li>
                    }
                </ul>
            </li>
        }
    </ol>
    <label>Property Filter</label>
    <select name="property_customPropertyFilter">
        <option value=""></option>
        <option value="Filter1" selected="@(propertyQuery.Contains("Filter1"))">Filter1</option>
        <option value="Filter2" selected="@(propertyQuery.Contains("Filter2"))">Filter2</option>
    </select>
    <label>Property Filter2</label>
    <select name="property_customPropertyFilter2">
        <option value=""></option>
        <option value="Filter1" selected="@(propertyQuery2.Contains("Filter1"))">Filter1</option>
        <option value="Filter2" selected="@(propertyQuery2.Contains("Filter2"))">Filter2</option>
    </select>
    <button type="submit">Filter</button>
</form>

